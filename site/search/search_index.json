{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to example \u00b6 This website contains the documentation for the wonderful project example","title":"Home"},{"location":"index.html#welcome-to-example","text":"This website contains the documentation for the wonderful project example","title":"Welcome to example"},{"location":"class_and_function.html","text":"Shark class \u00b6 class methods: swimclass class functions & static methods: be_awesome swimstatic Shark . swimclass ( a ) \u00b6 Teach them how to swim Parameters self: obj \u2013 Instance of Shark . Returns bool \u2013 Did they succeed. Source Code 1 2 3 4 5 6 7 8 @classmethod def swimclass ( self , a ): print ( 'prout' ) print ( \"The shark is swimming.\" ) for i in range ( 2 ): print ( \"lololo\" ) return Shark . be_awesome ( self ) \u00b6 Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Source Code 1 2 3 def be_awesome ( self ): print ( \"The shark is being awesome.\" ) Shark . swimstatic ( self , a ) \u00b6 Teach them how to swim Parameters self: obj \u2013 Instance of Shark . Returns bool \u2013 Did they succeed. Source Code 1 2 3 4 5 6 7 8 @staticmethod def swimstatic ( self , a ): print ( 'prout' ) print ( \"The shark is swimming.\" ) for i in range ( 2 ): print ( \"lololo\" ) return maxi ( x : int , y : int = 5 ) \u00b6 Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Source Code 1 2 3 def maxi ( x : int , y : int = 5 ): return np . max ( x , y ) maxi2pourvoir ( x , y ) \u00b6 Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Source Code 1 2 3 def maxi2pourvoir ( x , y ): return np . max ( x , y )","title":"Class and function"},{"location":"class_and_function.html#Shark","text":"class methods: swimclass class functions & static methods: be_awesome swimstatic","title":"Shark"},{"location":"class_and_function.html#swimclass","text":"Teach them how to swim Parameters self: obj \u2013 Instance of Shark . Returns bool \u2013 Did they succeed. Source Code 1 2 3 4 5 6 7 8 @classmethod def swimclass ( self , a ): print ( 'prout' ) print ( \"The shark is swimming.\" ) for i in range ( 2 ): print ( \"lololo\" ) return","title":"swimclass"},{"location":"class_and_function.html#be_awesome","text":"Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Source Code 1 2 3 def be_awesome ( self ): print ( \"The shark is being awesome.\" )","title":"be_awesome"},{"location":"class_and_function.html#swimstatic","text":"Teach them how to swim Parameters self: obj \u2013 Instance of Shark . Returns bool \u2013 Did they succeed. Source Code 1 2 3 4 5 6 7 8 @staticmethod def swimstatic ( self , a ): print ( 'prout' ) print ( \"The shark is swimming.\" ) for i in range ( 2 ): print ( \"lololo\" ) return","title":"swimstatic"},{"location":"class_and_function.html#maxi","text":"Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Source Code 1 2 3 def maxi ( x : int , y : int = 5 ): return np . max ( x , y )","title":"maxi"},{"location":"class_and_function.html#maxi2pourvoir","text":"Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Source Code 1 2 3 def maxi2pourvoir ( x , y ): return np . max ( x , y )","title":"maxi2pourvoir"},{"location":"fullsupport_docstring.html","text":"fullsupport ( x : float , y : float = 3 ) \u00b6 Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Heading 4 with secondary text \u00b6 note block Add a personnal remark here warning block Add details about the possible problems success block Something you\u2019re proud of ? Tell it here summary block A summary block question Any question tip block Any tip to share ? bug block Oups! quote block Oups! fail block A fail block info block You need to add more context or more informations error block Sometimes things go wrong example block Illustrate your point with an example Of course there is emoji and code inline with syntax highlights: import numpy as np Link to other sites ( http://www.google.com ) or other part of the doc function test note block with display You can also add note on a block that can be hidden open by default And it can be open by default Source Code 1 2 3 def fullsupport ( x : float , y : float = 3 ): return np . max ( x , y ) test ( x : int ) \u00b6 no doc Source Code 1 2 3 def test ( x : int ): return","title":"Fullsupport docstring"},{"location":"fullsupport_docstring.html#fullsupport","text":"Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object.","title":"fullsupport"},{"location":"fullsupport_docstring.html#test","text":"no doc Source Code 1 2 3 def test ( x : int ): return","title":"test"},{"location":"functions.html","text":"mini ( x , y ) \u00b6 Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Source Code 1 2 3 def mini ( x , y ): return np . min ( x , y ) mini2peutetre ( x , y ) \u00b6 Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Source Code 1 2 3 def mini2peutetre ( x , y ): return np . min ( x , y )","title":"Functions"},{"location":"functions.html#mini","text":"Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Source Code 1 2 3 def mini ( x , y ): return np . min ( x , y )","title":"mini"},{"location":"functions.html#mini2peutetre","text":"Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Source Code 1 2 3 def mini2peutetre ( x , y ): return np . min ( x , y )","title":"mini2peutetre"},{"location":"subfolder/functions.html","text":"mini ( x , y ) \u00b6 Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Source Code 1 2 3 def mini ( x , y ): return np . min ( x , y ) mini2peutetre ( x , y ) \u00b6 Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Source Code 1 2 3 def mini2peutetre ( x , y ): return np . min ( x , y )","title":"Functions"},{"location":"subfolder/functions.html#mini","text":"Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Source Code 1 2 3 def mini ( x , y ): return np . min ( x , y )","title":"mini"},{"location":"subfolder/functions.html#mini2peutetre","text":"Take the max between two numbers Parameters x: float \u2013 Description of parameter x . y: float \u2013 Description of parameter y . Returns float \u2013 Description of returned object. Source Code 1 2 3 def mini2peutetre ( x , y ): return np . min ( x , y )","title":"mini2peutetre"}]}